@inject NavigationManager Navigation

@code {

  [CascadingParameter]
  private Task<AuthenticationState> AuthenticationStateTask { get; set; }

  protected override async Task OnInitializedAsync()
  {
    var authState = await AuthenticationStateTask;

    if (authState.User.Identity == null || !authState.User.Identity.IsAuthenticated)
    {
      var currentURI = Navigation.ToBaseRelativePath(Navigation.Uri) ?? "";
      if (currentURI.Contains("ballot"))
      {
        var redirectURI = currentURI.Replace("ballot/", "");
        Navigation.NavigateTo(redirectURI, replace: true);
        return;
      }

      Navigation.NavigateTo("/login");
    }
  }
}